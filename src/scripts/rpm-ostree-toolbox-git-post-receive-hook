#!/usr/bin/perl
#
# This is a git post-receive hook for use with rhel-atomic-host. It is
# intended to live and run on the git server.
#
# Please save this file as <gitrepo>/hooks/post-receive with mode 755.
#
use strict;
use warnings;

###############################################################################
# BEGIN user-customizable section

# We _could_ define these in .git/config, and use 'git config --get'.
# Doesn't seem worth it (esm 2014-10-23).

# Remote host and port. We will send it one branch per line.
our $Remote_Host = 'FIXME';
our $Remote_Port = 8099;

# How long to wait before aborting a connection.
our $Timeout     = 5;           # seconds

# END   user-customizable section
###############################################################################

use IO::Socket;

# We receive one or more lines on stdin; each line has three elements:
#        old-value      new-value     ref-name
# e.g:   54bf6b4410.... 1e854e80..... refs/heads/master
# All we care about is ref-name. If it's of the form "refs/heads/SOMETHING"
# it's a branch name, and we'll remember it for sending to the remote.
#
# See githooks(5) under post-receive.
my %branches;
while (my $line = <STDIN>) {
    chomp $line;
    my (undef, undef, $refname) = split ' ', $line;

    # Could also be refs/tags/foo for a tag. We don't care about those.
    if ($refname =~ m|^refs/heads/(\S+)$|) {
        $branches{$1}++;
    }
}

# If this was just a tag (vs a commit), there's nothing to do.
exit 0 if ! keys %branches;

# We've received all changes, and have a list of one or more branches.
# Connect to remote, and tell it.
my $sock = IO::Socket::INET->new(
    PeerAddr => $Remote_Host,
    PeerPort => $Remote_Port,
    Timeout  => $Timeout,
) or do {
    # Warning: information leak by divulging host:port. Ed believes this is OK
    # given a trusted set of committers.
    warn <<"END_WARNING";
warning: could not send git-push notification.
...Don't worry: your commit went through just fine.
...This just means that we can't trigger an automatic tree compose.
...The error was: connecting to $Remote_Host:$Remote_Port: $@
END_WARNING
    exit 0;
};

print { $sock } $_, "\n" for sort keys %branches;

close $sock;

exit 0;
